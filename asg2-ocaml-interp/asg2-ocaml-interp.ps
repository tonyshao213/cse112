%!PS-Adobe-3.0
%%Creator: groff version 1.22.2
%%CreationDate: Sat Apr  3 00:19:53 2021
%%Title: asg2-ocaml-interp.ps
%%BoundingBox: 0 0 612 792
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font NewCenturySchlbk-Bold
%%+ font NewCenturySchlbk-Roman
%%DocumentSuppliedResources: procset grops 1.22 2
%%+ font Courier-Elite-Bold
%%+ font Courier-Elite
%%Pages: 3
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.22 2
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
DEFS/BPhook known{DEFS begin BPhook end}if
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne
2 index/UniqueID ne
and
{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
mark
}bind def
/PEND{
cleartomark
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Bold
%%IncludeResource: font NewCenturySchlbk-Bold
%%IncludeResource: font NewCenturySchlbk-Roman
%%BeginResource: font Courier-Elite-Bold
%%DocumentNeededResources: font Courier-Bold
/MakeTransformedFont{
findfont dup maxlength dict begin
{
exch dup dup/FID ne exch/UniqueID ne and{
exch def
}{
pop pop
}ifelse
}forall
/FontBBox
currentdict/FontBBox get
4 array copy def
FontBBox aload pop
4 index transform 4 2 roll
4 index transform 4 2 roll
FontBBox astore pop
FontMatrix exch matrix concatmatrix
/FontMatrix exch def
dup/FontName exch def
currentdict end
definefont pop
}bind def
/Courier-Elite-Bold
[ .833333333 0 0 1 0 0 ]
/Courier-Bold
MakeTransformedFont
%%EndResource
%%BeginResource: font Courier-Elite
%%DocumentNeededResources: font Courier
/MakeTransformedFont{
findfont dup maxlength dict begin
{
exch dup dup/FID ne exch/UniqueID ne and{
exch def
}{
pop pop
}ifelse
}forall
/FontBBox
currentdict/FontBBox get
4 array copy def
FontBBox aload pop
4 index transform 4 2 roll
4 index transform 4 2 roll
FontBBox astore pop
FontMatrix exch matrix concatmatrix
/FontMatrix exch def
dup/FontName exch def
currentdict end
definefont pop
}bind def
/Courier-Elite
[ .833333333 0 0 1 0 0 ]
/Courier
MakeTransformedFont
%%EndResource
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Courier-Elite-Bold@0 ENC0/Courier-Elite-Bold RE/Courier-Elite@0 ENC0
/Courier-Elite RE/NewCenturySchlbk-Roman@0 ENC0/NewCenturySchlbk-Roman
RE/NewCenturySchlbk-Bold@0 ENC0/NewCenturySchlbk-Bold RE
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
.48 LW 540 54 72 54 DL 540 56 72 56 DL/F0 12/NewCenturySchlbk-Bold@0 SF
(CSE-112 \203 Spring 2021 \203 Program 2 \203 Interpreter in Ocaml)72 50
Q/F1 12/NewCenturySchlbk-Roman@0 SF 3.336(1o)75.276 G 3.336(f3)-3.336 G
/F2 11/Courier-Elite@0 SF
($Id: asg2-ocaml-interp.mm,v 1.32 2021-04-03 00:19:52-07 - - $)72 67 Q(\
PWD: /afs/cats.ucsc.edu/courses/cse112-wm/Assignments/asg2-ocaml-interp)
72 80 Q(URL: https://www2.ucsc.edu/courses/cse112-wm/:/Assignments/asg2\
-ocaml-interp/)72 93 Q F0 3.444(1. Overview)72 117 R F1 .039
(This project will repeat the Mini Basic interpreter)72 137 R 3.375(,e)
-1.2 G .038(xcept this time the program will)-3.375 F .977(be written i\
n Ocaml but with Mini Basic programs untranslated from the original.)72
151 R .987(See the)72 165 R/F3 12/Courier-Elite-Bold@0 SF(.score/)4.323
E F1 .987(directory for sample input \214les)4.323 F 7.659(.O)-.3 G .986
(utput should be the same as for)-7.659 F .275(the Sc)72 179 R .275(hem\
e version of the program, except for minor variations in output due to \
dif-)-.084 F .949(ferences between the Sc)72 193 R .949
(heme and Ocaml languages)-.084 F 7.621(.A)-.3 G .949(ny results whic)
-7.621 F 4.285(hw)-.084 G .949(ould pro-)-4.285 F
(duce a complex value in Sc)72 207 Q(heme should produce)-.084 E F3(nan)
3.336 E F1(in this project.)3.336 E F0 3.444(2. Running)72 233 R F3
(ocaml)3.444 E F0(interactively)3.444 E F1 1.048(Ocaml ma)72 253 R 4.384
(yb)-.12 G 4.384(er)-4.384 G 1.049
(un interactively from the command line or as a compiled program.)-4.384
F .517(The compiled program version, created using)72 267 R F3(make)
3.853 E F1 .517(is required for all submitted pro-)3.853 F(grams)72 281
Q(.)-.3 E 1.32 -.66(To r)72 301 T(un).66 E F3(ocaml)3.336 E F1
(interactively)3.336 E 3.336(,a)-1.5 G(dd the following to your)-3.336 E
F3($HOME/.bash_profile)3.336 E F1(:)2 E F3
(export PATH=$PATH:/afs/cats.ucsc.edu/courses/cse112-wm/usr/ocaml/bin)
85.5 315 Q F1 2.012(When running)72 329 R F3(ocaml)5.348 E F1
(interactively)5.348 E 5.348(,u)-1.5 G 2.012(se the command)-5.348 F F3
(rlwrap)5.348 E F1 2.012(to gain access to the)5.348 F
(readline arrow keys so that you can recover earlier typed lines)72 343
Q 6.672(.E)-.3 G -1.336(xample :)-6.672 F/F4 12/Courier-Elite@0 SF
(-bash-$)85.5 357 Q F3(rlwrap ocaml)6 E F4(OCaml version 4.02.1)133.5
371 Q(#)85.5 385 Q F3(let f x y = x +. y;;)6 E F4
(val f : float -> float -> float = <fun>)85.5 399 Q(#)85.5 413 Q F3 6
(f3)6 G(.;;)-6 E F4 6(-:f)85.5 427 S(loat -> float = <fun>)-6 E(#)85.5
441 Q F3 6(f3)6 G 6(.4)-6 G(.;;)-6 E F4 6(-:f)85.5 455 S(loat = 7.)-6 E
(#)85.5 469 Q F3<0044>6 E F1 1.32 -.66(To s)72 483 T(implify typing).66
E 3.336(,t)-.3 G(he following line might be added to your)-3.336 E F3
($HOME/.bash_profile)3.336 E F1(:)2 E F3(alias wocaml="rlwrap ocaml")
85.5 497 Q F1 .085(The suggestions above assume you are using)72 511 R
F3(bash)3.421 E F1 .085(as your login shell.)3.421 F .084
(If not, use the)6.757 F
(syntax appropriate for whatever shell you are using)72 525 Q(.)-.3 E
(Some \214les that are useful when running interactively are)72 545 Q(:)
2 E F3(using)72 565 Q F1 4.627(As)102 579 S 1.291(et of)-4.627 F F3
(#use)4.627 E F1 1.292(directives whic)4.627 F 4.628(hc)-.084 G 1.292
(an be used for interactive testing of the func-)-4.628 F(tions)102 593
Q 8.058(.T)-.3 G 1.386(his \214le is not used in compilation.)-8.058 F
1.385(After starting Ocaml, type in the)8.057 F
(following command to load your source code interactively)102 607 Q(:)2
E F3(#use "using";;)115.5 621 Q(.ocamlinit)72 641 Q F1 1.977
(As an alternative to the)102 655 R F3(using)5.313 E F1(\214le)5.313 E
5.313(,c)-.216 G 1.977(reate the \214le)-5.313 F F3(.ocamlinit)5.313 E
F1 1.977(containing the)5.313 F 2.109(same information.)102 669 R 2.109
(The \214le)8.781 F F3(.ocamlinit)5.445 E F1 2.108
(in the current directory is automati-)5.444 F(cally sourced when)102
683 Q F3(ocaml)3.336 E F1(starts)3.336 E(.)-.3 E(As an alternative)72
703 Q 3.336(,s)-.216 G(tart up)-3.336 E F3(ocaml)3.336 E F1
(with the line)3.336 E F3(rlwrap ocaml -init using)85.5 717 Q F1(whic)72
731 Q 3.774(hw)-.084 G .438
(ill start up the init \214le when needed, but a)-3.774 F .438
(void the automatic startup when)-.12 F 1.606(you don't w)72 745 R 1.606
(ant it.)-.216 F 1.606(If you ha)8.278 F 1.605(ve a)-.12 F F3
(.ocamlinit)4.941 E F1 1.605(and w)4.941 F 1.605
(ant to ocassionally suppress it,)-.216 F 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
.48 LW 540 54 72 54 DL 540 56 72 56 DL/F0 12/NewCenturySchlbk-Bold@0 SF
(CSE-112 \203 Spring 2021 \203 Program 2 \203 Interpreter in Ocaml)72 50
Q/F1 12/NewCenturySchlbk-Roman@0 SF 3.336(2o)75.276 G 3.336(f3)-3.336 G
(you can use)72 74 Q/F2 12/Courier-Elite-Bold@0 SF
(rlwrap ocaml -init /dev/null)85.5 88 Q F0 3.444(3. Source)72 114 R
(code)3.444 E F1(The following \214les and modules are provided in the)
72 134 Q F2(code/)3.336 E F1 -1.336(subdirectory :)3.336 F F2(etc.mli)72
154 Q F1(,)A F2(etc.ml)3.336 E F1 .153
(Interface and implementation of the)102 168 R F2(Etc)3.489 E F1(module)
3.489 E 3.49(,w)-.216 G(hic)-3.49 E 3.49(hc)-.084 G .154
(ontains miscellaneous)-3.49 F
(functions not speci\214cally tied to other purposes)102 182 Q(.)-.3 E
F2(absyn.mli)72 202 Q F1 1.071
(De\214nition of the abstract syntax used by the interpreter)102 216 R
7.742(.N)-1.2 G 4.406(oi)-7.742 G(mplementation)-4.406 E
(\214le is needed.)102 230 Q F2(tables.mli)72 250 Q F1(,)A F2(tables.ml)
3.336 E F1 .946
(Module for maintaining the \214ve tables needed by the program.)102 264
R .946(The interface)7.618 F .456(\214le is automatically generated fro\
m the implemenation, not entered manually)102 278 R(.)-1.5 E
(The required tables and their types are)102 292 Q(:)2 E F2(label_table)
102 306 Q F1(Labels with pointers to the list of program statements)132
320 Q(.)-.3 E F2
(type label_table_t = \(string, Absyn.program\) Hashtbl.t)132 334 Q
(unary_fn_table)102 348 Q F1(The unary functions)132 362 Q(.)-.3 E F2
(type unary_fn_table_t = \(string, float -> float\) Hashtbl.t)132 376 Q
(binary_fn_table)102 390 Q F1(The binary functions)132 404 Q(.)-.3 E F2
(type binary_fn_table_t = \(string, float -> float -> float\) Hashtbl.t)
132 418 Q F1 .401(Because Ocaml is strongly typed, the unary and binary\
 functions need to)132 432 R(be be in separate tables)132 446 Q(.)-.3 E
F2(variable_table)102 460 Q F1
(The simple variables used by the program.)132 474 Q F2
(type variable_table_t = \(string, float\) Hashtbl.t)132 488 Q
(array_table)102 502 Q F1(The arra)132 516 Q(ys used by the program.)
-.12 E F2(type array_table_t = \(string, float array\) Hashtbl.t)132 530
Q(interp.mli)72 550 Q F1(,)A F2(interp.ml)3.336 E F1 .451
(The interface and implementation of the interpreter)102 564 R 7.122(.T)
-1.2 G .45(his is the major project)-7.122 F
(of this program and must be extensively modi\214ed.)102 578 Q F2
(main.ml)72 598 Q F1 1.436(The main function whic)102 612 R 4.772(hb)
-.084 G(eha)-4.772 E 1.436(ves differently)-.12 F 4.772(,d)-1.5 G 1.437
(epending on whether the pro-)-4.772 F .887
(gram is run interactively or from the command line)102 626 R 7.559(.D)
-.216 G .887(oes the parsing to cre-)-7.559 F
(ate the abstract syntax structure)102 640 Q 3.336(,t)-.216 G
(hen calls the interpreter)-3.336 E(.)-1.2 E F2(parser.mly)72 660 Q F1
.497(The parser reads a Mini Basic program, verify syntax, and create t\
he abstract)102 674 R 3.336(syntax. Speci\214es)102 688 R
(the exact syntax of the language)3.336 E(.)-.216 E F2(scanner.mll)72
708 Q F1 1.896(The lexical speci\214cation for the language)102 722 R
5.232(,a)-.216 G 1.896(nd reads tokens from the source)-5.232 F(\214le)
102 736 Q(.)-.216 E 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
.48 LW 540 54 72 54 DL 540 56 72 56 DL/F0 12/NewCenturySchlbk-Bold@0 SF
(CSE-112 \203 Spring 2021 \203 Program 2 \203 Interpreter in Ocaml)72 50
Q/F1 12/NewCenturySchlbk-Roman@0 SF 3.336(3o)75.276 G 3.336(f3)-3.336 G
/F2 12/Courier-Elite-Bold@0 SF(Makefile)72 74 Q F1 2.534
(Since the Ocaml project is compiled into a binary executable)102 88 R
5.87(,a)-.216 G 5.87(si)-5.87 G 5.87(sC)-5.87 G 2.534(++, a)-5.87 F F2
(Makefile)102 102 Q F1(is needed, as is required in any C)3.336 E 3.336
(,C)-.444 G(++, or J)-3.336 E -.12(av)-.3 G 3.336(ap).12 G(roject.)
-3.336 E F0 3.444(4. What)72 128 R(to submit)3.444 E F1 1.339
(Submit all of the necessary source \214les so that the grader ma)72 148
R 4.675(yp)-.12 G 1.338(erform the build.)-4.675 F .908
(That means submit)72 162 R F2(Makefile)4.244 E F1(,)A F2(parser.mly)
4.245 E F1(,)A F2(scanner.mll)4.245 E F1 4.245(,a)C .909(nd all)-4.245 F
F2(*.mli)4.245 E F1(and)4.245 E F2(*.ml)4.245 E F1(\214les)4.245 E(.)-.3
E .96(If you are doing pair programming)72 176 R 4.296(,a)-.3 G .96
(lso submit the \214les required by the)-4.296 F F2(pair-pro-)4.296 E
(gramming)72 190 Q F1 3.336(document. V)3.336 F
(erify the grading criteria from the)-.9 E F2(.score/)3.336 E F1
(subdirectory)3.336 E(.)-1.5 E 0 Cg EP
%%Trailer
end
%%EOF
