type token =
    RELOP of string
  | EQUAL of string
  | ADDOP of string
  | MULOP of string
  | POWOP of string
  | IDENT of string
  | NUMBER of string
  | STRING of string
  | COLON
  | COMMA
  | LPAR
  | RPAR
  | LSUB
  | RSUB
  | EOL
  | EOF
  | DIM
  | LET
  | GOTO
  | IF
  | PRINT
  | INPUT
val linenr : unit -> int
val syntax : unit -> unit
val yytransl_const : int array
val yytransl_block : int array
val yylhs : string
val yylen : string
val yydefred : string
val yydgoto : string
val yysindex : string
val yyrindex : string
val yygindex : string
val yytablesize : int
val yytable : string
val yycheck : string
val yynames_const : string
val yynames_block : string
val yyact : (Parsing.parser_env -> Obj.t) array
val yytables : Parsing.parse_tables
val program : (Lexing.lexbuf -> token) -> Lexing.lexbuf -> Absyn.program
