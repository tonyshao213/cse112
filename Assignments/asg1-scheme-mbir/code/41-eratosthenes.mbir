;;Source: mb-programs.d/41-eratosthenes.mb
(
(    1          )
(    2          (let n 100))
(    3          (dim (asub sieve n)))
(    4          )
(    5          )
(    6          )
(    7          (let i 2))
(    8 init     (let (asub sieve i) 1))
(    9          (let i (+ i 1)))
(   10          (if (< i n) init))
(   11          )
(   12          )
(   13          )
(   14          (let prime 2))
(   15 primes   (if (= (asub sieve prime) 0) next))
(   16          (print prime))
(   17          (let i (* prime 2)))
(   18          (goto punch))
(   19 loop     (let (asub sieve i) 0))
(   20          (let i (+ i prime)))
(   21 punch    (if (< i n) loop))
(   22          )
(   23 next     (let prime (+ prime 1)))
(   24          (if (< prime n) primes))
)
