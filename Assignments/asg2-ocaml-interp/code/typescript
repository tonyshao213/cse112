

bash 13$ rcsdiff -r1.6 -r1.5 etc.mli
===================================================================
RCS file: RCS/etc.mli,v
retrieving revision 1.6
retrieving revision 1.5
diff -r1.6 -r1.5
1c1
< (* $Id: etc.mli,v 1.6 2021-04-28 06:47:17-07 - - $ *)
---
> (* $Id: etc.mli,v 1.5 2020-10-22 12:33:57-07 - - $ *)
12,13d11
< 
< val parse_failed : bool ref


bash 14$ rcsdiff -r1.7 -r1.6 etc.ml
===================================================================
RCS file: RCS/etc.ml,v
retrieving revision 1.7
retrieving revision 1.6
diff -r1.7 -r1.6
1c1
< (* $Id: etc.ml,v 1.7 2021-04-28 06:48:20-07 - - $ *)
---
> (* $Id: etc.ml,v 1.6 2020-10-22 02:50:33-07 - - $ *)
6d5
< let parse_failed : bool ref = ref false
25,28c24,26
<     (warn (position.Lexing.pos_fname :: ": "
<            :: string_of_int position.Lexing.pos_lnum :: ": "
<            :: message);
<      parse_failed := true)
---
>     warn (position.Lexing.pos_fname :: ": "
>           :: string_of_int position.Lexing.pos_lnum :: ": "
>           :: message)


bash 15$ rs[Kcsdiff -r1.7 -r1.6 main.ml
===================================================================
RCS file: RCS/main.ml,v
retrieving revision 1.7
retrieving revision 1.6
diff -r1.7 -r1.6
1c1
< (* $Id: main.ml,v 1.7 2021-04-28 06:49:04-07 - - $ *)
---
> (* $Id: main.ml,v 1.6 2020-10-29 10:21:37-07 - - $ *)
14,16c14
<          in if !Etc.parse_failed
<             then Etc.die ["parse failed"]
<             else Interp.interpret_program abstract_syntax)
---
>          in Interp.interpret_program abstract_syntax)


