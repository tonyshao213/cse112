head	1.3;
access;
symbols;
locks;
comment	@# @;


1.3
date	2021.01.18.04.45.44;	author -;	state -;
branches;
next	1.2;

1.2
date	2020.11.10.05.29.00;	author -;	state -;
branches;
next	1.1;

1.1
date	2020.09.07.02.41.54;	author -;	state -;
branches;
next	;


desc
@@


1.3
log
@-
@
text
@# $Id: 32-factorial.mb,v 1.2 2020-11-09 21:29:00-08 - - $
read:   print "Factorial of:"
        input x
        if eof > 0 goto stop
        if x != x goto error
        if x < 0 goto error
        goto letfac
error:  print "Invalid input."
        goto read

letfac: let factorial = 1
        let itor = 2
loop:   if itor > x goto prt
        let factorial = factorial * itor
        let itor = itor + 1
        goto loop
prt:    print "factorial(", x, ") = ", factorial
        goto read

stop:   print "Program stopping."
@


1.2
log
@-
@
text
@d1 1
a1 1
# $Id: 32-factorial.mb,v 1.1 2020-09-06 19:41:54-07 - - $
d4 1
a4 1
        if eof != 0 goto stop
@


1.1
log
@-
@
text
@d1 1
a1 1
# $Id: 32-factorial.sb,v 1.2 2020-08-30 19:59:42-07 - - $
d4 1
a4 1
        if eof = 1 goto stop
@
