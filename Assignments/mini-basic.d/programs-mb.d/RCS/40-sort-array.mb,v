head	1.3;
access;
symbols;
locks;
comment	@# @;


1.3
date	2021.04.14.15.47.59;	author -;	state -;
branches;
next	1.2;

1.2
date	2021.01.18.04.45.55;	author -;	state -;
branches;
next	1.1;

1.1
date	2020.09.07.02.41.54;	author -;	state -;
branches;
next	;


desc
@@


1.3
log
@-
@
text
@# $Id: 40-sort-array.mb,v 1.2 2021-01-17 20:45:55-08 - - $
# Sort numbers.
# Input is a sequence of numbers ending with end of file.
# User is assumed to have not more than 100 numbers.
# Note that nan != nan, other was x = x for all x that is not nan.
# Algorithm: bubble sort O(n^2).
        let size = 100
        dim a[size]
        let max = 0
read:   input x
        if eof > 0 goto eof
        if x != x goto error
        let a[max] = x
        let max = max + 1
        if max < size goto read
eof:
        print ""
        print "unsorted"
        let i = 0
prtlp:  print "a[", i, "]=", a[i]
        let i = i + 1
        if i < max goto prtlp
        if i < 1 goto sorted

        let i = max - 1
outer:  let j = 0 
inner:  if a[j] <= a[j + 1] goto noswap
        let t = a[j]
        let a[j] = a[j+1]
        let a[j+1]=t
noswap: let j = j + 1
        if j <= i - 1 goto inner
        let i = i - 1
        if i > 0 goto outer

sorted: print ""
        print "sorted"
        let i = 0
sortlp: print "a[", i, "]=", a[i]
        let i = i + 1
        if i < max goto sortlp
        goto stop
error:  print "Invalid input"
stop:
@


1.2
log
@-
@
text
@d1 1
a1 1
# $Id: 40-sort-array.mb,v 1.1 2020-09-06 19:41:54-07 - - $
d6 1
@


1.1
log
@-
@
text
@d1 1
a1 1
# $Id: 40-sort-array.sb,v 1.2 2020-08-30 19:59:42-07 - - $
d10 1
a10 1
        if eof != 0 goto eof
@
