head	1.13;
access;
symbols;
locks;
comment	@# @;


1.13
date	2020.09.07.03.13.06;	author -;	state -;
branches;
next	1.12;

1.12
date	2020.08.18.22.50.12;	author -;	state -;
branches;
next	1.11;

1.11
date	2019.11.26.22.08.20;	author -;	state -;
branches;
next	1.10;

1.10
date	2014.11.13.04.51.57;	author -;	state -;
branches;
next	1.9;

1.9
date	2012.01.20.00.59.44;	author -;	state -;
branches;
next	1.8;

1.8
date	2011.04.09.00.39.11;	author -;	state -;
branches;
next	1.7;

1.7
date	2011.04.08.21.03.11;	author -;	state -;
branches;
next	1.6;

1.6
date	2011.04.08.20.52.42;	author -;	state -;
branches;
next	1.5;

1.5
date	2011.04.08.20.51.27;	author -;	state -;
branches;
next	1.4;

1.4
date	2011.04.08.20.51.16;	author -;	state -;
branches;
next	1.3;

1.3
date	2009.02.04.01.33.28;	author -;	state -;
branches;
next	1.2;

1.2
date	2009.02.04.01.31.41;	author -;	state -;
branches;
next	1.1;

1.1
date	2009.02.04.01.24.36;	author -;	state -;
branches;
next	;


desc
@@


1.13
log
@-
@
text
@# $Id: Makefile,v 1.12 2020-08-18 15:50:12-07 - - $

#
# General useful macros
#

MKFILE     = Makefile
MAKEFLAGS += --no-builtin-rules
DEPSFILE   = ${MKFILE}.deps
NOINCLUDE  = ci clean spotless
NEEDINCL   = ${filter ${NOINCLUDE}, ${MAKECMDGOALS}}

#
# File list macros
#

EXECBIN	   = mbtran
OBJCMX	   = absyn.cmx etc.cmx parser.cmx lexer.cmx main.cmx
OBJCMI	   = ${patsubst %.cmx, %.cmi, ${OBJCMX}}
OBJBIN	   = ${patsubst %.cmx, %.o, ${OBJCMX}}
MLSOURCE   = etc.mli absyn.ml etc.ml main.ml
GENSOURCE  = parser.mli parser.ml lexer.ml 
GENFILES   = ${GENSOURCE} parser.output
ALLSOURCES = README ${MLSOURCE} parser.mly lexer.mll ${MKFILE}

#
# General targets
#

all : ${EXECBIN}

${EXECBIN} : ${OBJCMX}
	ocamlopt ${OBJCMX} -o ${EXECBIN}

%.cmi : %.mli
	ocamlc -c $<

%.cmx : %.ml
	ocamlopt -c $<

%.ml : %.mll
	ocamllex $<

%.mli %.ml : %.mly
	ocamlyacc -v $<

#
# Misc targets
#

clean :
	- rm ${OBJCMI} ${OBJCMX} ${OBJBIN}

spotless : clean
	- rm ${EXECBIN} ${GENFILES} Listing.ps Listing.pdf

ci : ${ALLSOURCES}
	cid -is ${ALLSOURCES}

deps : ${MLSOURCE} ${GENSOURCE}
	@@ echo "# ${DEPSFILE} created `date`" >${DEPSFILE}
	ocamldep ${MLSOURCE} ${GENSOURCE} >>${DEPSFILE}

${DEPSFILE} :
	@@touch ${DEPSFILE}
	${MAKE} deps

lis : ${ALLSOURCES}
	mkpspdf Listing.ps ${ALLSOURCES}

again :
	${MAKE} spotless
	${MAKE} deps
	${MAKE} ci
	${MAKE} all
	${MAKE} lis

ifeq "${NEEDINCL}" ""
include ${DEPSFILE}
endif

@


1.12
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.11 2019-11-26 14:08:20-08 - - $
d17 1
a17 1
EXECBIN	   = sbtran
a24 1
LISTING    = Listing.ps
d55 1
a55 1
	- rm ${EXECBIN} ${GENFILES}
d57 2
a58 2
ci : ${ALLSOURCES} ${SBFILES}
	cid -is ${ALLSOURCES} ${SBFILES}
d69 1
a69 1
	mkpspdf ${LISTING} ${ALLSOURCES}
@


1.11
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.10 2014-11-12 20:51:57-08 - - $
d59 1
a59 1
	cid + ${ALLSOURCES} ${SBFILES}
@


1.10
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.9 2012-01-19 16:59:44-08 - - $
d63 1
a63 1
	ocamldep ${MLSOURCE} ${GENSOURCE} | sort | uniq >>${DEPSFILE}
@


1.9
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.8 2011-04-08 17:39:11-07 - - $
d25 1
a25 1
LISTING    = ../translator.ps
@


1.8
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.7 2011-04-08 14:03:11-07 - - $
d25 1
a25 1
LISTING    = ../sbtran.lis.ps
@


1.7
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.6 2011-04-08 13:52:42-07 - - $
a11 4
PERLTOPLP  = perl -e '$$cmd = shift; for (@@ARGV) { \
			print "\#$$cmd \"$$_\";; "; \
			s/(.*)\..*/\u$$1/; \
			print "open $$_;;\n"; }'
a17 2
BYTEBIN    = sbtran.b
TOPLPLOAD  = sbtran.load
a18 1
OBJCMO	   = ${patsubst %.cmx, %.cmo, ${OBJCMX}}
d31 1
a31 14
all : exec byte load

e : exec

b : byte

l : load

exec : ${EXECBIN}

byte : ${BYTEBIN}

load : ${OBJCMO}
	${PERLTOPLP} load ${OBJCMO} >${TOPLPLOAD}
a35 3
${BYTEBIN} : ${OBJCMO}
	ocamlc ${OBJCMO} -o ${BYTEBIN}

a38 3
%.cmo : %.ml
	ocamlc -c $<

d53 1
a53 1
	- rm ${OBJCMI} ${OBJCMO} ${OBJCMX} ${OBJBIN}
d56 1
a56 1
	- rm ${EXECBIN} ${BYTEBIN} ${GENFILES} ${TOPLPLOAD}
@


1.6
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.4 2011/04/08 20:51:16 - - $
d9 3
a11 3
COMMA      = ,
YES        = perl -e 'print "y\n" while 1'
QNL        = perl -pe 's/\?\s*/$&\n/g'
a31 1
RCSFILES   = ${patsubst %, RCS/%${COMMA}v, ${ALLSOURCES}}
d88 6
a93 6
	cid + ${MKFILE}
	perl -ni -e 'print unless \
		m/^\w+\.cm[iox]:(\s+\w+\.cm[iox])+\s*$$/' ${MKFILE}
	ocamldep ${MLSOURCE} ${GENSOURCE} \
		| sort | uniq | tee -a ${MKFILE}
	cid + ${MKFILE}
d105 4
a108 14
#================================================================
# DO NOT PUT ANY LINES IN THIS MAKEFILE THAT MATCH THE NAMES
# OF ANY OF THE OBJECT FILES.  `gmake deps' WILL DELETE AND
# REPLACE THEM BY THE NEW DEPENDENCIES AT THE END OF THE FILE.
#================================================================
etc.cmo: etc.cmi 
etc.cmx: etc.cmi 
lexer.cmo: parser.cmi etc.cmi absyn.cmo 
lexer.cmx: parser.cmx etc.cmx absyn.cmx 
main.cmo: parser.cmi lexer.cmo etc.cmi absyn.cmo 
main.cmx: parser.cmx lexer.cmx etc.cmx absyn.cmx 
parser.cmi: absyn.cmo 
parser.cmo: etc.cmi absyn.cmo parser.cmi 
parser.cmx: etc.cmx absyn.cmx parser.cmi 
@


1.5
log
@-
@
text
@d1 119
a119 12
absyn.cmo:
absyn.cmx:
etc.cmi:
etc.cmo: etc.cmi
etc.cmx: etc.cmi
lexer.cmo: parser.cmi etc.cmi absyn.cmo
lexer.cmx: parser.cmx etc.cmx absyn.cmx
main.cmo: parser.cmi lexer.cmo etc.cmi absyn.cmo
main.cmx: parser.cmx lexer.cmx etc.cmx absyn.cmx
parser.cmi: absyn.cmo
parser.cmo: etc.cmi absyn.cmo parser.cmi
parser.cmx: etc.cmx absyn.cmx parser.cmi
@


1.4
log
@-
@
text
@d1 12
a12 119
# $Id: Makefile,v 1.3 2009-02-03 17:33:28-08 - - $

#
# General useful macros
#

MKFILE     = Makefile
MAKEFLAGS += --no-builtin-rules
COMMA      = ,
YES        = perl -e 'print "y\n" while 1'
QNL        = perl -pe 's/\?\s*/$&\n/g'
PERLTOPLP  = perl -e '$$cmd = shift; for (@@ARGV) { \
			print "\#$$cmd \"$$_\";; "; \
			s/(.*)\..*/\u$$1/; \
			print "open $$_;;\n"; }'

#
# File list macros
#

EXECBIN	   = sbtran
BYTEBIN    = sbtran.b
TOPLPLOAD  = sbtran.load
OBJCMX	   = absyn.cmx etc.cmx parser.cmx lexer.cmx main.cmx
OBJCMO	   = ${patsubst %.cmx, %.cmo, ${OBJCMX}}
OBJCMI	   = ${patsubst %.cmx, %.cmi, ${OBJCMX}}
OBJBIN	   = ${patsubst %.cmx, %.o, ${OBJCMX}}
MLSOURCE   = etc.mli absyn.ml etc.ml main.ml
GENSOURCE  = parser.mli parser.ml lexer.ml 
GENFILES   = ${GENSOURCE} parser.output
ALLSOURCES = README ${MLSOURCE} parser.mly lexer.mll ${MKFILE}
RCSFILES   = ${patsubst %, RCS/%${COMMA}v, ${ALLSOURCES}}
LISTING    = ../sbtran.lis.ps

#
# General targets
#

all : exec byte load

e : exec

b : byte

l : load

exec : ${EXECBIN}

byte : ${BYTEBIN}

load : ${OBJCMO}
	${PERLTOPLP} load ${OBJCMO} >${TOPLPLOAD}

${EXECBIN} : ${OBJCMX}
	ocamlopt ${OBJCMX} -o ${EXECBIN}

${BYTEBIN} : ${OBJCMO}
	ocamlc ${OBJCMO} -o ${BYTEBIN}

%.cmi : %.mli
	ocamlc -c $<

%.cmo : %.ml
	ocamlc -c $<

%.cmx : %.ml
	ocamlopt -c $<

%.ml : %.mll
	ocamllex $<

%.mli %.ml : %.mly
	ocamlyacc -v $<

#
# Misc targets
#

clean :
	- rm ${OBJCMI} ${OBJCMO} ${OBJCMX} ${OBJBIN}

spotless : clean
	- rm ${EXECBIN} ${BYTEBIN} ${GENFILES} ${TOPLPLOAD}

ci : ${ALLSOURCES} ${SBFILES}
	cid + ${ALLSOURCES} ${SBFILES}

deps : ${MLSOURCE} ${GENSOURCE}
	cid + ${MKFILE}
	perl -ni -e 'print unless \
		m/^\w+\.cm[iox]:(\s+\w+\.cm[iox])+\s*$$/' ${MKFILE}
	ocamldep ${MLSOURCE} ${GENSOURCE} \
		| sort | uniq | tee -a ${MKFILE}
	cid + ${MKFILE}

lis : ${ALLSOURCES}
	mkpspdf ${LISTING} ${ALLSOURCES}

again :
	${MAKE} spotless
	${MAKE} deps
	${MAKE} ci
	${MAKE} all
	${MAKE} lis

#================================================================
# DO NOT PUT ANY LINES IN THIS MAKEFILE THAT MATCH THE NAMES
# OF ANY OF THE OBJECT FILES.  `gmake deps' WILL DELETE AND
# REPLACE THEM BY THE NEW DEPENDENCIES AT THE END OF THE FILE.
#================================================================
etc.cmo: etc.cmi 
etc.cmx: etc.cmi 
lexer.cmo: parser.cmi etc.cmi absyn.cmo 
lexer.cmx: parser.cmx etc.cmx absyn.cmx 
main.cmo: parser.cmi lexer.cmo etc.cmi absyn.cmo 
main.cmx: parser.cmx lexer.cmx etc.cmx absyn.cmx 
parser.cmi: absyn.cmo 
parser.cmo: etc.cmi absyn.cmo parser.cmi 
parser.cmx: etc.cmx absyn.cmx parser.cmi 
@


1.3
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.2 2009-02-03 17:31:41-08 - - $
d32 1
a32 1
RCSFILES   = ${patsubst %, RCS/%${COMMA}v, ${ALLSOURCE}}
d85 2
a86 2
ci : ${ALLSOURCE} ${SBFILES}
	cid + ${ALLSOURCE} ${SBFILES}
d96 1
a96 1
lis : ${ALLSOURCE}
@


1.2
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.1 2009-02-03 17:24:36-08 - - $
d7 1
a7 1
MKFILE    = Makefile
d9 4
a12 4
COMMA     = ,
YES       = perl -e 'print "y\n" while 1'
QNL       = perl -pe 's/\?\s*/$&\n/g'
PERLTOPLP = perl -e '$$cmd = shift; for (@@ARGV) { \
d21 13
a33 13
EXECBIN	  = sbtran
BYTEBIN   = sbtran.b
TOPLPLOAD = sbtran.load
OBJCMX	  = absyn.cmx etc.cmx parser.cmx lexer.cmx main.cmx
OBJCMO	  = ${patsubst %.cmx, %.cmo, ${OBJCMX}}
OBJCMI	  = ${patsubst %.cmx, %.cmi, ${OBJCMX}}
OBJBIN	  = ${patsubst %.cmx, %.o, ${OBJCMX}}
MLSOURCE  = etc.mli absyn.ml etc.ml main.ml
GENSOURCE = parser.mli parser.ml lexer.ml 
GENFILES  = ${GENSOURCE} parser.output
ALLSOURCE = README ${MLSOURCE} parser.mly lexer.mll ${MKFILE}
RCSFILES  = ${patsubst %, RCS/%${COMMA}v, ${ALLSOURCE}}
LISTING   = ../sbtran.lis.ps
@


1.1
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.4 2009-02-03 17:24:15-08 - - $
d33 1
a33 1
LISFILE   = Listing-sbtran.ps
d97 1
a97 3
	enscript -jG -C -b `pwd` -p ${LISFILE} ${ALLSOURCE}
	ghostview -magstep 1 ${LISFILE} &
	ps2pdf ${LISFILE}
@
