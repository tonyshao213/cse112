head	1.3;
access;
symbols;
locks;
comment	@# @;


1.3
date	2020.11.10.06.09.39;	author -;	state -;
branches;
next	1.2;

1.2
date	2020.11.10.05.22.16;	author -;	state -;
branches;
next	1.1;

1.1
date	2020.11.10.05.21.43;	author -;	state -;
branches;
next	;


desc
@@


1.3
log
@-
@
text
@#!/afs/cats.ucsc.edu/courses/cse112-wm/usr/smalltalk/bin/gst -f
"$Id: readnumbers.st,v 1.2 2020-11-09 21:22:16-08 - - $"

Object subclass: NumberStream [
   |atEndFlag stream buffer|
   NumberStream class >> new [
      ^ super new init: stdin.
   ]
   NumberStream class >> new: aStream [
      ^ super new init: aStream.
   ]
   init: aStream [
      atEndFlag := false.
      stream := aStream.
      buffer := OrderedCollection new.
   ]
   atEnd [ ^ atEndFlag ]
   nextNumber [
      [atEndFlag] whileFalse: [
         buffer size > 0 ifTrue: [
            ^ buffer removeFirst asNumber asFloatD.
         ].
         stdout flush.
         stderr flush.
         stream atEnd "This condition fills the input buffer."
            ifTrue: [atEndFlag := true]
            ifFalse: [buffer := stream nextLine substrings: ' ']
      ].
      ^ 0.0 / 0.0 "NaN".
   ]
]

input := NumberStream new.
nl := Character nl.
[input atEnd] whileFalse: [
   |num|
   num := input nextNumber.
   stdout << num class << ': ' << num << nl.
]

@


1.2
log
@-
@
text
@d2 1
a2 1
"$Id: readnumbers.st,v 1.1 2020-11-09 21:21:43-08 - - $"
d38 1
a38 1
   stdout << num << ': ' << num class << nl.
@


1.1
log
@-
@
text
@d2 1
a2 1
"$Id: numberstream.st,v 1.4 2020-11-09 20:00:04-08 - - $"
a36 1
   stdout << 'Input number:' << nl.
@
